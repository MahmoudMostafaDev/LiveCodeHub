generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum provider {
  GITHUB
  GOOGLE
  CREDENTIALS
}

model course {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  description      String?
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  thumbnail        String?
  popularity       Int?
  course_user      course_user[]
  students         students[]
  videos           videos[]
  counter          Int                @default(0)
  user_video_stops user_video_stops[]
}

model course_user {
  id        Int      @id @default(autoincrement())
  course_id Int
  user_id   Int
  course    course   @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_user_course")
  students  students @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_user_user")
}

model user {
  id       Int        @id @default(autoincrement())
  username String     @unique @db.VarChar(50)
  password String?
  provider provider   @default(CREDENTIALS)
  email    String?    @unique @db.VarChar(60)
  image    String?
  students students[]
  teacher  teacher[]
}

model teacher {
  id      Int  @id @default(autoincrement())
  user_id Int
  user    user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model students {
  user_id          Int                @unique
  user             user               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  last_course      Int?
  course_user      course_user[]
  course           course?            @relation(fields: [last_course], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_course")
  user_video_stops user_video_stops[]
  streak           streak?
  todayCounter     Int                @default(0)
  counterData      DateTime           @default(now())
}

model streak {
  id         Int      @id @default(autoincrement())
  user_id    Int      @unique
  value      Int      @default(0)
  lastAction DateTime @default(now())
  students   students @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

model user_video_stops {
  user_id   Int
  video_id  Int
  order     Int
  course_id Int
  course    course   @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  students  students @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  video     videos   @relation(fields: [video_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, course_id])
  @@unique([user_id, course_id])
}

model videos {
  id               Int                @id @default(autoincrement())
  link             String
  title            String             @default("video")
  tumbnail         String?
  length           Int?
  course_id        Int
  course           course             @relation(fields: [course_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_video_stops user_video_stops[]
}
